package data.view;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyListener;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import data.controller.DatabaseController;

/**
 * The database Panel for the GUI that holds all of the objects used inside the
 * GUI, and deals with the user interaction.
 * 
 * @author ssla9721
 *
 */
public class DatabasePanel extends JPanel
{
	private DatabaseController baseController;
	private JTable table;
	private SpringLayout baseLayout;
	private JLabel titleLabel;
	private JScrollPane tablePane;
	private JTextArea displayArea;
	private Component displayPane;
	private JTable yoyoTable;
	private JButton queryButton;

	/**
	 * The Constructor for the Panel, to initialize the objects.
	 * 
	 * @param baseController
	 */
	public DatabasePanel(DatabaseController baseController)
	{
		this.baseController = baseController;
		baseLayout = new SpringLayout();
		queryButton = new JButton("test query");

		displayPane = new JScrollPane();

		setupDisplayPanel();
		setupPanel();
		setupLayout();
		setupListeners();

	}

	/**
	 * setting up the basics fo the visual for the display panel.
	 */
	private void setupDisplayPanel()
	{
		displayArea.setWrapStyleWord(true);
		displayArea.setLineWrap(true);
		displayArea.setEditable(false);
		displayArea.setBackground(Color.CYAN);
	}

	/**
	 * setting up the database table to be used in the actual database.
	 */
	private void setupTable()
	{
		String[] colNames = { "yoyo Col 1", "yoyo Col 2" };
		DefaultTableModel yoyoModel = new DefaultTableModel(baseController.getMyYoyos(), colNames);

		yoyoTable = new JTable(yoyoModel);

	}

	/**
	 * setting up the panel to be used, the basic visual displays.
	 */
	private void setupPanel()
	{
		this.setBackground(Color.PINK);
		this.setSize(1000, 1000);
		this.setLayout(baseLayout);
		this.add(displayPane);
		this.add(queryButton);

		displayArea = new JTextArea(10, 30);
		displayArea.setLineWrap(true);
		add(displayArea);
	}

	/**
	 * The dumping place for all of the "baselayout.putConstraint" stuff that is
	 * generated by the window builder.
	 */
	private void setupLayout()
	{
		baseLayout.putConstraint(SpringLayout.WEST, queryButton, 195, SpringLayout.WEST, this);
		baseLayout.putConstraint(SpringLayout.SOUTH, queryButton, -295, SpringLayout.SOUTH, this);
		baseLayout.putConstraint(SpringLayout.WEST, displayArea, 125, SpringLayout.WEST, this);
		baseLayout.putConstraint(SpringLayout.SOUTH, displayArea, -718, SpringLayout.SOUTH, this);
	}

	/**
	 * setup the listeners so that the computer can respond to clicks and other
	 * inputs.
	 */
	private void setupListeners()
	{
		queryButton.addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent click)
			{
				JFrame popFrame = new JFrame();
				popFrame.setSize(250, 250);
				popFrame.setContentPane(new DynamicDataPanel(baseController, "books"));
				popFrame.setVisible(true);
			}
		});
		
//		/**
//		 * Testing for the password listener.
//		 */
//		samplePassword.addKeyListener(new KeyListener()
//		{
//			private boolean isPasting;
//			if(isPasting)
//			{
//				
//			}
//		});
	}
}
